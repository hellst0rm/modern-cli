name: Build Packages

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'packages/**'
      - 'scripts/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'packages/**'
      - 'scripts/**'
  workflow_dispatch:

jobs:
  test-pkgbuilds:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Arch Linux environment
      run: |
        pacman -Syu --noconfirm
        pacman -S --noconfirm base-devel namcap
    
    - name: Test PKGBUILD syntax
      run: |
        ./scripts/test-pkgbuild.sh all

  test-configs:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Arch Linux environment
      run: |
        pacman -Syu --noconfirm
        pacman -S --noconfirm base-devel git fish lua jq yq taplo-cli

    - name: Verify tools installation
      run: |
        echo "Verifying installed tools..."
        jq --version || echo "jq not found"
        yq --version || echo "yq not found" 
        taplo --version || echo "taplo not found"
        lua -v || echo "lua not found"
        fish --version || echo "fish not found"
    
    - name: Test configurations
      run: |
        ./scripts/test-configs.sh all

  build-packages:
    needs: [test-pkgbuilds, test-configs]
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Arch Linux environment
      run: |
        pacman -Syu --noconfirm
        pacman -S --noconfirm base-devel devtools git sudo
    
    - name: Create build user
      run: |
        useradd -m builder
        echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        chown -R builder:builder .
    
    - name: Show build order and dependencies
      run: |
        su builder -c "./scripts/update-packages.sh deps"
    
    - name: Build all packages
      run: |
        su builder -c "./scripts/update-packages.sh build"
    
    - name: Update repository database
      run: |
        su builder -c "./scripts/build-repo.sh add"
    
    - name: Verify repository integrity
      run: |
        ./scripts/build-repo.sh verify
    
    - name: Show repository status
      run: |
        ./scripts/build-repo.sh status
    
    - name: Upload packages artifact
      uses: actions/upload-artifact@v4
      with:
        name: arch-packages-${{ github.sha }}
        path: x86_64/
        retention-days: 30
    
    - name: Generate build summary
      run: |
        echo "## Build Summary" > build-summary.md
        echo "- **Commit:** ${{ github.sha }}" >> build-summary.md
        echo "- **Branch:** ${{ github.ref_name }}" >> build-summary.md
        echo "- **Build Method:** pkgctl with dependency resolution" >> build-summary.md
        echo "" >> build-summary.md
        
        echo "### Built Packages" >> build-summary.md
        if ls x86_64/*.pkg.tar.* 1> /dev/null 2>&1; then
          for pkg in x86_64/*.pkg.tar.*; do
            if [ -f "$pkg" ]; then
              pkg_name=$(basename "$pkg")
              pkg_size=$(stat -c%s "$pkg" | numfmt --to=iec)
              echo "- $pkg_name ($pkg_size)" >> build-summary.md
            fi
          done
        else
          echo "- No packages found" >> build-summary.md
        fi
        
        echo "" >> build-summary.md
        echo "### Repository Database" >> build-summary.md
        if [ -f "x86_64/modern-cli-repo.db" ]; then
          db_size=$(ls -lh x86_64/modern-cli-repo.db | awk '{print $5}')
          files_size=$(ls -lh x86_64/modern-cli-repo.files | awk '{print $5}')
          echo "- Database: modern-cli-repo.db ($db_size)" >> build-summary.md
          echo "- Files: modern-cli-repo.files ($files_size)" >> build-summary.md
          echo "- Format: Modern .tar.xz format with symlinks" >> build-summary.md
        else
          echo "- Repository database not found" >> build-summary.md
        fi
    
    - name: Upload build summary
      uses: actions/upload-artifact@v4
      with:
        name: build-summary-${{ github.sha }}
        path: build-summary.md
        retention-days: 30

  build-status:
    needs: [test-pkgbuilds, test-configs, build-packages]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Build success notification
      if: needs.build-packages.result == 'success'
      run: |
        echo "✅ All packages built successfully!"
        echo "📦 Artifacts available for deployment"
        echo "🔧 Built with pkgctl and dependency resolution"
    
    - name: Build failure notification
      if: needs.build-packages.result == 'failure'
      run: |
        echo "❌ Package build failed!"
        echo "🔍 Check build logs for details"
        
    - name: Test failure notification
      if: needs.test-pkgbuilds.result == 'failure' || needs.test-configs.result == 'failure'
      run: |
        echo "❌ Pre-build tests failed!"
        echo "🔍 Check test logs for details"
